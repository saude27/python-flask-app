name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ec2-user
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
    
    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Build, tag, and push Docker image
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.2.2
        with:
         host: ${{ secrets.EC2_HOST }}
         username: ec2-user
         key: ${{ secrets.EC2_SSH_KEY }}
         envs: ECR_REGISTRY,ECR_REPOSITORY,GITHUB_SHA,AWS_REGION
         script: |
           echo "Logging into ECR..."
           aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

           echo "Stopping old container (if exists)..."
           docker stop flask-app || true
           docker rm flask-app || true

           echo "Pulling new image from ECR..."
           echo "Image: $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA"
           docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

           echo "Running new container..."
           docker run -d -p 80:5000 --name flask-app $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
